{"version":3,"sources":["components/Footer.js","components/Header.js","components/gameboard/DogCard.js","components/gameboard/Gameboard.js","components/gameboard/GameHeader.js","components/GameOverModal.js","components/gameboard/YouWinModal.js","components/WinnerConfetti.js","components/Main.js","App.js","index.js"],"names":["Footer","className","href","target","rel","Header","DogCard","dog","dogClickHandler","gameOver","useState","imageLoaded","setImageLoaded","useEffect","alt","name","src","url","onLoad","onClick","id","GameBoard","dogs","dogImages","map","GameHeader","score","bestScore","GameOverModal","newRound","YouWinModal","WinnerConfetti","confetti","ConfettiGenerator","render","clear","Main","setDogs","setScore","setBestScore","setGameOver","clickDog","newClickedDogs","alreadyClicked","newDogs","a","sort","Math","random","value","b","getDogs","fetch","mode","result","json","dogData","dogUrls","message","dogItems","dogUrl","uniqid","dogNames","allRandom","alert","some","dogIsAlreadyClicked","newScore","incrementScore","App","document","body","classList","add","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.baa61e52.chunk.js","sourcesContent":["import React from 'react'\nimport './Footer.css'\n\nfunction Footer() {\n    return (\n        <div className=\"Footer\">\n            <a\n                href=\"https://github.com/Dubya-Mick\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n            >\n                My Github\n            </a>\n            {' / '}\n            <a\n                href=\"https://dog.ceo/dog-api/\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n            >\n                Dog API\n            </a>\n            {' / '}\n            <a\n                href=\"https://github.com/sindresorhus/dog-names\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n            >\n                dog-names\n            </a>\n            {' / '}\n            <a\n                href=\"https://github.com/Agezao/confetti-js\"\n                target=\"_blank\"\n                rel=\"noreferrer\"\n            >\n                Confetti.js\n            </a>\n\n        </div>\n    )\n}\n\nexport default Footer\n","import React from 'react';\nimport './Header.css';\n\nfunction Header() {\n    return (\n        <div className=\"Header\">\n            <div>\n                <div>Oh I just must not click the same dog!</div>\n            </div>\n        </div>\n    )\n}\n\nexport default Header\n","import React, { useEffect, useState } from 'react'\nimport './DogCard.css'\n\nfunction DogCard({ dog, dogClickHandler, gameOver }) {\n    // piece of state for managing whether or not image has loaded to allow for smooth fade-in\n    const [imageLoaded, setImageLoaded] = useState(false);\n\n    useEffect(() => {\n        setImageLoaded(false);\n    }, [gameOver])\n\n    return (\n        <figure>\n            <img\n                className={`dog-image fade-in ${imageLoaded ? 'visible' : 'hidden'}`}\n                alt={`A dog named ${dog.name}`}\n                src={dog.url}\n                onLoad={() => setImageLoaded(true)}\n                onClick={() => dogClickHandler(dog.id)}\n            />\n            <figcaption\n                className={`fade-in ${gameOver ? 'hidden' : 'visible'}`}\n            >{dog.name}</figcaption>\n        </figure>\n    )\n}\n\nexport default DogCard\n","import React from 'react'\nimport DogCard from './DogCard'\nimport './GameBoard.css'\n\nfunction GameBoard({ dogs, dogClickHandler, gameOver }) {\n    const dogImages = dogs.map((dog) => (\n        <div key={dog.id}>\n            <DogCard\n                dog={dog}\n                dogClickHandler={dogClickHandler}\n                gameOver={gameOver}\n            />\n        </div>\n    ));\n    return (\n        <div className=\"GameBoard\">\n            {dogImages}\n        </div>\n    )\n}\n\nexport default GameBoard\n","import React from 'react'\n\nfunction GameHeader({ score, bestScore }) {\n    return (\n        <div>\n            Score: {score} / Best: {bestScore}\n        </div>\n    )\n}\n\nexport default GameHeader\n","import React from 'react'\nimport './GameOverModal.css'\n\nfunction GameOverModal({ gameOver, newRound }) {\n    return (\n        <div className={`modal-overlay ${!gameOver ? \"closed\" : ''}`}>\n            <div className=\"modal\">\n                <div className=\"modal-content\">\n                    <h1>Awooo! Double clicked that dog!</h1>\n                    <button className=\"modal-button\" onClick={() => newRound()}>Restart</button>\n                </div>\n            \n            </div>\n        </div>\n    )\n    \n    \n\n}\n\nexport default GameOverModal\n","import React from 'react';\nimport './YouWinModal.css';\n\nfunction YouWinModal({ newRound }) {\n    return (\n        <div className=\"modal-overlay\">\n            <div className=\"modal-win\">\n                <div className=\"modal-content-win\">\n                    <h1>YOU DID IT! WOOF WOOF AWOOO!</h1>\n                    <button className=\"modal-button\" onClick={() => newRound()}>Restart</button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default YouWinModal\n","import React, { useEffect } from 'react';\nimport ConfettiGenerator from 'confetti-js';\nimport './WinnerConfetti.css';\nimport YouWinModal from './gameboard/YouWinModal';\n\nfunction WinnerConfetti({ newRound }) {\n\n    useEffect(() => {\n        const settings = { target: 'my-canvas' };\n        const confetti = new ConfettiGenerator(settings);\n        confetti.render();\n        \n        return () => {\n            confetti.clear();\n        };\n    }, []);\n\n    return (\n        <div>\n            <div className=\"confetti\">\n                <canvas id=\"my-canvas\"></canvas>\n            </div>\n            <YouWinModal \n                newRound={newRound}\n            />\n        </div>\n    )\n}\n\nexport default WinnerConfetti\n","import React, { useEffect, useState } from 'react'\nimport uniqid from 'uniqid';\nimport dogNames from 'dog-names';\nimport GameBoard from './gameboard/Gameboard';\nimport GameHeader from './gameboard/GameHeader';\nimport GameOverModal from './GameOverModal';\nimport './Main.css';\nimport WinnerConfetti from './WinnerConfetti';\n\nfunction Main() {\n    const [dogs, setDogs] = useState([]);\n    const [score, setScore] = useState(0);\n    const [bestScore, setBestScore] = useState(0);\n    const [gameOver, setGameOver] = useState(false);\n\n    // create array of objects from array of dog URLs\n    const processDogs = (dogUrls) => {\n        return dogUrls.map(dogUrl => (\n            {id: uniqid(), url: dogUrl, alreadyClicked: false, name: dogNames.allRandom()}));\n    };\n\n    // shuffle order of the dogs\n    const shuffleDogs = (currentDogs) => {\n        const shuffledDogs = currentDogs        \n            .map(a => ({sort: Math.random(), value: a}))\n            .sort((a, b) => a.sort - b.sort)\n            .map(a => a.value);\n        return shuffledDogs;\n    }\n\n    // check if the dog clicked has already been clicked\n    const dogIsAlreadyClicked = (id) => {\n        return dogs.some(dog => dog.id === id && dog.alreadyClicked);\n    };\n\n    // set click status of clicked dog, then shuffle dogs\n    const clickDog = (id) => {\n        const newClickedDogs = dogs.map(dog => {\n            if (dog.id === id) {\n                return {...dog, alreadyClicked: true}\n            };\n            return dog;\n        });\n        const newDogs = shuffleDogs(newClickedDogs);\n        setDogs(newDogs);\n    };\n\n    const incrementScore = () => {\n        const newScore = score + 1;\n        if (newScore > bestScore) {\n            setBestScore(newScore)\n        }\n        setScore(newScore);\n    };\n\n    const youLose = () => {\n        setGameOver(true);\n    };\n\n    // if the dog is already clicked, set gameOver\n    // else set click status of dog and increase score\n    const dogClickHandler = (id) => {\n        if (dogIsAlreadyClicked(id)) {\n            youLose();\n        } else {\n            clickDog(id);\n            incrementScore();\n        }\n    };\n\n    // fetch dogs using dog API\n    const getDogs = async () => {\n        try {\n            const result = await fetch('https://dog.ceo/api/breeds/image/random/12', { mode: 'cors' });\n            const dogData = await result.json();\n            const dogItems = processDogs(dogData.message);\n            setDogs(dogItems);\n        } catch {\n            alert('Oop! Failed to retrieve dogs! Try Refreshing the page.');\n        };\n    };\n\n    // reset the board for new round\n    const newRound = () => {\n        setScore(0);\n        setGameOver(false);\n        getDogs();\n    };\n\n    // grab dogs on inital mount of Main component\n    useEffect(() => {\n        getDogs();\n    }, []);\n\n    return (\n        <div className=\"Main\">\n            <GameHeader\n                score={score}\n                bestScore={bestScore}\n            />\n            <GameBoard \n                dogs={dogs}\n                dogClickHandler={dogClickHandler}\n                gameOver={gameOver}\n\n            />\n            <GameOverModal \n                newRound={newRound}\n                gameOver={gameOver}\n            />\n            {\n                score === 12 && \n                    <WinnerConfetti \n                        newRound={newRound}\n                    />\n            }\n\n        </div>\n    )\n}\n\nexport default Main\n","import React, { useEffect } from 'react';\nimport './App.css';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport Main from './components/Main';\n\nfunction App() {\n\n  useEffect(() => {\n    document.body.classList.add('body');\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Main />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}